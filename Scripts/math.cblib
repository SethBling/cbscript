# Adapted from code by Triton365
function sqrt(_x)
    if _x >= 0 and _x <= 19310
        sqrt.y = -594039 / (_x + 4095) + 149
    else if _x >= 19311 and _x <= 1705544
        sqrt.y = -1568669636 / (_x + 903167) + 1857
    else if _x >= 1705545 and _x <= 39400514
        sqrt.y = -2147483648 / (_x / 141 + 224767) + 10425
    else if _x >= 39400515 and _x <= 455779650
        sqrt.y = -2147483648 / (_x / 7775 + 60419) + 39184
    else if _x >= 455779651 and _x <= 2147483647
        sqrt.y = -2147483648 / (_x / 100000 + 26111) + 91181
    end

    sqrt.y = (sqrt.y + _x / sqrt.y) / 2

    if sqrt.y * sqrt.y > _x
        sqrt.y--
    end

    return sqrt.y
end

function abs(n)
	if n < 0
		return -n
	else
		return n
	end
end

function sin(_sin_angle)
	_sin_angle %= 360
	mult = 1
	if _sin_angle > 180
		_sin_angle -= 180
		mult = -1
	end

	return 4000*_sin_angle*(180-_sin_angle)/(40500-_sin_angle*(180-_sin_angle)) * mult
end

# Input: angle * 100
# Output: sin * 100
function sin_precise(_sin_angle)
	_sin_angle %= 36000
	mult = 1
	if _sin_angle > 18000
		_sin_angle -= 18000
		mult = -1
	end

    _angle_sq = _sin_angle * (18000 - _sin_angle) / 100


	return 4 * _angle_sq * 100 / (4050000 - _angle_sq) * mult
end

function cos(_cos_angle)
	return sin(_cos_angle+90)
end

function cos_precise(_cos_angle)
    return sin_precise(_cos_angle + 9000)
end

function sign(n)
	if n > 0
		return 1
	else if n < 0
		return -1
	else
		return 0
	end
end
