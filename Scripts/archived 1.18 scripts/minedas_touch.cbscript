dir "C:\Users\Seth\AppData\Roaming\.minecraft 1.18\saves\Minedas_test"
desc "Automatically mine the blocks in front of you"
scale 10000

import common
import math

reset

end


clock main
#	as @Player[gamemode=!spectator] at @s eyes
#		/gamerule doTileDrops false
#		for $d in $range(0, 501)
#			$forward = $d / 100.0
#			at ^ ^ ^$forward do mine_block()
#		end
#		/gamerule doTileDrops true
#		/effect give @s night_vision 100 0 true
#	end

	unless @Position do create @Position

	as @Player[gamemode=!spectator]
		at @s eyes
			/tp @Position ^ ^ ^
		end
		@Position.rx = @s.rx
		@Position.ry = @s.ry

		<x1, y1, z1> = @Position.<pos>

		move @Position ^ ^ ^1

		<x2, y2, z2> = @Position.<pos>
		<dx, dy, dz> = <x2, y2, z2> - <x1, y1, z1>
		adx = abs(dx)
		ady = abs(dy)
		adz = abs(dz)

		at @s eyes
			/tp @Position ^ ^ ^
		end


		for step = 1 to 100
			<x, y, z> = @Position.<pos>

			distsq = ((x - x1)/100)^2 + ((y - y1)/100)^2 + ((z - z1)/100)^2
			if distsq <= 28 * (scale / 100) * (scale / 100)
				at @Position
					mine_block()
				end

				$Large = 1000000000

				if dx == 0
					xcomp = $Large
					x_dx = $Large
					x_dy = $Large
					x_dz = $Large
				else
					xcomp = scale - x % scale
					if dx < 0
						xcomp -= scale + 1
					end

					x_dx = xcomp
					x_dy = xcomp * dy / dx
					x_dz = xcomp * dz / dx
				end

				if dy == 0
					ycomp = $Large
					y_dx = $Large
					y_dy = $Large
					y_dz = $Large
				else
					ycomp = scale - y % scale
					if dy < 0
						ycomp -= scale + 1
					end

					y_dx = ycomp * dx / dy
					y_dy = ycomp
					y_dz = ycomp * dz / dy
				end

				if dz == 0
					zcomp = $Large
					z_dx = $Large
					z_dy = $Large
					z_dz = $Large
				else
					zcomp = scale - z % scale

					if dz < 0
						zcomp -= scale + 1
					end

					z_dx = zcomp * dx / dz
					z_dy = zcomp * dy / dz
					z_dz = zcomp
				end

				if debug_cursor
					if @s.selected_slot + 1 == step
						at @Position
							/particle minecraft:bubble
						end

						title @a 0 10 0 ""
						ix = x / scale
						fx = x % scale
						iy = y / scale
						fy = y % scale
						iz = z / scale
						fz = z % scale
						actionbar @a "#(step) pos: (ix).(fx), (iy).(fy), (iz).(fz) comps: (xcomp), (ycomp), (zcomp)"
					end
				end


				# Use the most sensitive axis to determine which dimension
				# has the smallest step (since the step will always be largest
				# along that axis)
				if adx > ady and adx > adz
					move_along_smallest(x_dx, y_dx, z_dx)
				else if ady > adz
					move_along_smallest(x_dy, y_dy, z_dy)
				else
					move_along_smallest(x_dz, y_dz, z_dz)
				end
			else
				step = 100
			end
		end
	end
end

function move_along_smallest(x_d, y_d, z_d)
	x_ad = abs(x_d)
	y_ad = abs(y_d)
	z_ad = abs(z_d)

	if x_ad < y_ad and x_ad < z_ad
		@Position.<pos> += <x_dx, x_dy, x_dz>
	else if y_ad < z_ad
		@Position.<pos> += <y_dx, y_dy, y_dz>
	else
		@Position.<pos> += <z_dx, z_dy, z_dz>
	end
end

define block_tag unmineable
	water
	bubble_column
	lava
	air
	cave_air
	nether_portal
	end_portal
	end_portal_frame
	end_gateway
	bedrock
	obsidian
end

function mine_block()
	unless block ~ ~ ~ unmineable
		#/loot spawn ~ ~ ~ mine ~ ~ ~ mainhand
		/setblock ~ ~ ~ air destroy
	end
end
