dir "C:\Users\Seth\AppData\Roaming\.minecraft 1.14\saves\Minecraft in a Chest"
desc "A sidescroller in a chest."

import common

define block_tag passable
	air
	ladder
	oak_log
	oak_leaves
	grass
	tall_grass
	light_blue_carpet
	water
end

define @Steve : @Entity[type=armor_stand,tag=Steve,limit=1]
	create {Tags:["Steve"],ShowArms:1b,Invulnerable:1b}
end

define [Chest]
	qty[$i]: Items[{Slot:$ib}].Count byte 1
end

$Chest = (-211, 63, 354)
$Chest2 = (-210, 63, 354)
$Start = (-215, 65, 338)

$World = 1
$Inventory = 2

array inventory[0 to 23]

$NoTool = -1
$NoMine = -2

$InventorySlots = [
	('oak_log', 'oak_log', $NoTool, True),
	('oak_planks', 'oak_planks', $NoTool, True),
	('stick', 'stick', $NoMine, False),
	('wooden_pickaxe', 'wooden_pickaxe', $NoMine, False),
	('sandstone', 'sandstone', 3, True),
	('cobblestone', 'cobblestone', 3, True),
	('stone_pickaxe', 'stone_pickaxe', $NoMine, False),
	('iron_ore', 'iron_ingot', 6, False),
	('gravel', 'gravel', $NoTool, True),
	('granite', 'granite', $NoTool, True),
	('dirt', 'dirt', $NoTool, True),
	('bucket', 'bucket', $NoMine, False),
	('water_bucket', 'water_bucket', $NoMine, False),
]

reset
	tell @a '{Y[\[Reload Steve\]](call reload)'
end

function reload()
	/gamerule maxCommandChainLength 1000000000

	/kill @Steve
	create @Steve <$Start>
	screen = $World
	for $i in $range(24)
		inventory[$i] = 0
	end
	selected_item = 0

	$x, $y, $z = $Chest
	/setblock $x $y $z chest[facing=south,type=right]
	$x, $y, $z = $Chest2
	/setblock $x $y $z chest[facing=south,type=left]
end

function fill_chest()
	clicked_chest = False

	for $row in $range(6)
		for $col in $range(9)
			$x, $y, $z = $Chest
			$x = $x + $row / 3
			$slot = ($row % 3) * 9 + $col

			$wx = $col - 4
			$wy = 3 - $row + 0.5
			unless [$x $y $z].{Items[{Slot:$slotb}]}
				clicked_chest = True
				if click_row == $row and click_col == $col
					same_click++
				else
					same_click = 0
				end
				click_row = $row
				click_col = $col
			end
			at @Steve ~$wx ~$wy ~
				/replaceitem block $x $y $z container.$slot minecraft:light_blue_stained_glass_pane
				if block ~ ~ ~ water
					/replaceitem block $x $y $z container.$slot minecraft:blue_stained_glass_pane
				end

				/loot replace block $x $y $z container.$slot mine ~ ~ ~ diamond_pickaxe{Enchantments:[{id:"minecraft:silk_touch",lvl:1s}]}
				if block ~ ~ ~ grass
					/replaceitem block $x $y $z container.$slot grass
				end
				if block ~ ~ ~ tall_grass
					/replaceitem block $x $y $z container.$slot grass
				end
			end

			[$x $y $z].{Items[$slot]} += {tag:{display:{Name:"\"\""}}}
		end
	end

	$x, $y, $z = $Chest
	/replaceitem block $x $y $z container.22 minecraft:player_head
	[$x $y $z].{Items[22]} += {tag:{display:{Name:"\"\""}}}

	$x = $x + 1
	/replaceitem block $x $y $z container.4 minecraft:leather_chestplate
	[$x $y $z].{Items[4]} += {tag:{display:{Name:"\"\""}}}

	/execute positioned $x $y $z as @Player[distance=..7] run function chest_sidescroller:clear_player
end

function clear_player()
	if @s.{Inventory[{Slot:22b}]}
		/clear @s
		give_open_inventory_item()
	else
		inventory_screen_setup()
		screen = $Inventory
	end
end

function give_open_inventory_item()
	/replaceitem entity @s inventory.13 chest{display:{Name:"{\"text\":\"Open Inventory\",\"italic\":\"false\"}"}}
end

function world_screen()
	fill_chest()

	if clicked_chest
		if click_row == 0 as @Steve at @s if block ~ ~2 ~ passable
			can_jump = False
			unless block ~ ~-0.1 ~ passable
				can_jump = True
			end
			if @s.no_gravity
				can_jump = True
			end
			if can_jump
				move @Steve ~ ~1 ~
			end
		end
		if click_col == 0 at @Steve if block ~-1 ~ ~ passable and block ~-1 ~1 ~ passable
			move @Steve ~-1 ~ ~
		end
		if click_col == 8 at @Steve if block ~1 ~ ~ passable and block ~1 ~1 ~ passable
			move @Steve ~1 ~ ~
		end

		unless @Position do create @Position
		as @Position
			/tp @s @Steve
			@s.<pos> += <(click_col - 4) * 1000, (3 - click_row) * 1000, 0>
			at @s
				if click_col >= 3 and click_col <= 5 and click_row >= 1 and click_row <= 4
					if click_col == 4 and click_row >= 2 and click_row <= 3
						at_self = True
					else
						at_self = False
					end
					unless at_self if block ~ ~ ~ air if same_click == 0
						switch selected_item
							case $i in $range($len($InventorySlots))
								$item_name, $drop, $tool, $can_place = $InventorySlots[$i]
								if $tool >= $NoTool
									if inventory[$i] > 0
										inventory[$i]--
										/setblock ~ ~ ~ $item_name
										at @Player
											/playsound minecraft:block.stone.place neutral @a
										end
									end
								end
							end
						end
						if selected_item == 12 and block ~ ~ ~ air and inventory[12]
							/setblock ~ ~ ~ water
							inventory[12] = 0
							inventory[11] = 1
						end
					else if block ~ ~ ~ water[level=0] and inventory[11]
						/setblock ~ ~ ~ air
						inventory[11] = 0
						inventory[12] = 1
					else if same_click == 5
						can_mine = True
						for $i in $range($len($InventorySlots))
							$item_name, $drop, $tool, $can_place = $InventorySlots[$i]

							if $tool == $NoTool
								if block ~ ~ ~ $item_name
									inventory[$i]++
									at @Player
										/playsound minecraft:entity.item.pickup neutral @a
									end
								end
							end
							if $tool >= 0
								if block ~ ~ ~ $item_name
									if inventory[$tool]
										inventory[$i]++
										at @Player
											/playsound minecraft:entity.item.pickup neutral @a
										end
									else
										can_mine = False
									end
								end
							end
						end
						if block ~ ~ ~ grass_block
							inventory[10]++
							at @Player
								/playsound minecraft:entity.item.pickup neutral @a
							end
						end
						if block ~ ~ ~ stone
							if inventory[3]
								inventory[5]++
								at @Player
									/playsound minecraft:entity.item.pickup neutral @a
								end
							else
								can_mine = False
							end
						end
						if can_mine
							/setblock ~ ~ ~ air
						end
					end
				end
			end
		end
	end
end

function inventory_screen_setup()
	/clear @s
	for $row in $range(6)
		for $col in $range(9)
			$x, $y, $z = $Chest
			$x = $x + $row / 3
			$slot = ($row % 3) * 9 + $col

			/replaceitem block $x $y $z container.$slot air
		end
	end
	$x, $y, $z = $Chest
	/replaceitem block $x $y $z container.7 dispenser{display:{Name:"{\"text\":\"Close Inventory\",\"italic\":\"false\"}"}}
	/replaceitem block $x $y $z container.8 barrier{display:{Name:"{\"text\":\"Close Inventory\",\"italic\":\"false\"}"}}

	for $i in $range($len($InventorySlots))
		$item_name, $drop, $tool, $can_place = $InventorySlots[$i]
		$row = $i / 4
		$col = $i % 4

		$x, $y, $z = $Chest
		$x = $Chest[0] + $row / 3

		$slot = ($row * 9 + $col) % 27

		switch inventory[$i]
			case $count in $range(1, 65)
				/replaceitem block $x $y $z container.$slot $drop $count
			end
		end
	end
end

function inventory_screen()
	$CraftingTables = [
		(1, 4), (1, 5), (1, 6), (1, 7), (1, 8),
		(2, 4),							(2, 8),
		(3, 4),							(3, 8),
		(4, 4),							(4, 8),
		(5, 4), (5, 5), (5, 6), (5, 7), (5, 8),

	]
	$x, $y, $z = $Chest

	crafting_count = 0

	for $row in $range(6)
		for $col in $range(9)
			$x = $Chest[0] + $row / 3
			$slot = ($row % 3) * 9 + $col

			for $cr, $cc in $CraftingTables
				if $row == $cr and $col == $cc
					/replaceitem block $x $y $z container.$slot crafting_table
				end
			end

			if $row >= 2 and $row <= 4 and $col >= 5 and $col <= 7
				if [$x $y $z].{Items[{Slot:$slotb}]}
					crafting_count++
				end
			end
		end
	end

	if crafting_count == 1 and [<$Chest2>].{Items[{id:"minecraft:oak_log",Slot:6b}]}
		wood_count = [Chest at <$Chest2>].qty[6]
		if inventory[0] >= wood_count
			inventory[0] -= wood_count
			inventory[1] += wood_count * 4
			inventory_screen_setup()
		end
	end

	if crafting_count == 2 and [<$Chest2>].{Items[{id:"minecraft:oak_planks",Slot:6b}]} and [<$Chest>].{Items[{id:"minecraft:oak_planks",Slot:24b}]}
		plank1 = [Chest at <$Chest2>].qty[6]
		plank2 = [Chest at <$Chest>].qty[24]
		if plank1 > plank2
			planks = plank2
		else
			planks = plank1
		end

		if inventory[1] > planks * 2
			inventory[1] -= planks*2
			inventory[2] += planks*4
			inventory_screen_setup()
		end
	end

	if crafting_count == 5 and [<$Chest>].{Items[{id:"minecraft:oak_planks",Slot:24b}]} and [<$Chest>].{Items[{id:"minecraft:oak_planks",Slot:23b}]} and [<$Chest>].{Items[{id:"minecraft:oak_planks",Slot:25b}]} and [<$Chest2>].{Items[{id:"minecraft:stick",Slot:6b}]} and [<$Chest2>].{Items[{id:"minecraft:stick",Slot:15b}]}
		if inventory[2] >= 2 and inventory[1] >= 3
			inventory[2] -= 2
			inventory[1] -= 3
			inventory[3] = 1
			inventory_screen_setup()
		end
	end

	if crafting_count == 5 and [<$Chest>].{Items[{id:"minecraft:cobblestone",Slot:24b}]} and [<$Chest>].{Items[{id:"minecraft:cobblestone",Slot:23b}]} and [<$Chest>].{Items[{id:"minecraft:cobblestone",Slot:25b}]} and [<$Chest2>].{Items[{id:"minecraft:stick",Slot:6b}]} and [<$Chest2>].{Items[{id:"minecraft:stick",Slot:15b}]}
		if inventory[2] >= 2 and inventory[5] >= 3
			inventory[2] -= 2
			inventory[5] -= 3
			inventory[6] = 1
			inventory_screen_setup()
		end
	end

	if crafting_count == 3 and [<$Chest2>].{Items[{id:"minecraft:iron_ingot",Slot:5b}]} and [<$Chest2>].{Items[{id:"minecraft:iron_ingot",Slot:7b}]} and [<$Chest2>].{Items[{id:"minecraft:iron_ingot",Slot:15b}]}
		if inventory[7] >= 3
			inventory[7] -= 3
			inventory[11] = 1
			inventory_screen_setup()
		end
	end

	unless [<$Chest>].{Items[{id:"minecraft:barrier",Slot:8b}]}
		screen = $World
		give_open_inventory_item()
	end
	unless [<$Chest>].{Items[{id:"minecraft:dispenser",Slot:7b}]}
		handled = False
		for $i in $range($len($InventorySlots))
			$item_name, $drop, $tool, $can_place = $InventorySlots[$i]
			if $can_place
				if [<$Chest>].{Items[{id:"minecraft:$item_name",Slot:7b}]}
					selected_item = $i
					screen = $World
					give_open_inventory_item()
					handled = True
				end
			end
			if [<$Chest>].{Items[{id:"minecraft:water_bucket",Slot:7b}]}
				selected_item = 12
				screen = $World
				give_open_inventory_item()
				handled = True
			end
		end
		if not handled
			inventory_screen_setup()
		end
	end


	$x, $y, $z = $Chest
	/clear @s crafting_table
	/clear @s barrier
end

clock main
	switch screen
		case $World
			world_screen()
		end
		case $Inventory
			$x, $y, $z = $Chest
			/execute positioned $x $y $z as @Player[distance=..7,limit=1] run function chest_sidescroller:inventory_screen
		end
	end

	as @Steve at @s
		if block ~ ~ ~ ladder
			@s.no_gravity = True
		else if block ~ ~-0.5 ~ ladder
			@s.no_gravity = True
		else
			@s.no_gravity = False
		end

		if @s.no_gravity
			if clicked_chest and click_row == 5 at @Steve if block ~ ~-1 ~ passable
				move @Steve ~ ~-1 ~
			end
		end
	end
end
