dir "C:\Users\Seth\AppData\Roaming\.minecraft 1.14\saves\SethBling's World 1.14"
desc "Turn regular blocks into pushable blocks."

$BlockTypes = $"['stone', 'granite', 'polished_granite', 'diorite', 'polished_diorite', 'andesite', 'polished_andesite', 'dirt', 'coarse_dirt', 'cobblestone', 'oak_planks', 'spruce_planks', 'birch_planks', 'jungle_planks', 'acacia_planks', 'dark_oak_planks', 'bedrock', 'gold_ore', 'iron_ore', 'coal_ore', 'oak_log', 'spruce_log', 'birch_log', 'jungle_log', 'acacia_log', 'dark_oak_log', 'stripped_spruce_log', 'stripped_birch_log', 'stripped_jungle_log', 'stripped_acacia_log', 'stripped_dark_oak_log', 'stripped_oak_log', 'oak_wood', 'spruce_wood', 'birch_wood', 'jungle_wood', 'acacia_wood', 'dark_oak_wood', 'stripped_oak_wood', 'stripped_spruce_wood', 'stripped_birch_wood', 'stripped_jungle_wood', 'stripped_acacia_wood', 'stripped_dark_oak_wood', 'sponge', 'wet_sponge', 'lapis_ore', 'lapis_block', 'dispenser', 'sandstone', 'chiseled_sandstone', 'cut_sandstone', 'note_block', 'sticky_piston', 'piston', 'white_wool', 'orange_wool', 'magenta_wool', 'light_blue_wool', 'yellow_wool', 'lime_wool', 'pink_wool', 'gray_wool', 'light_gray_wool', 'cyan_wool', 'purple_wool', 'blue_wool', 'brown_wool', 'green_wool', 'red_wool', 'black_wool', 'gold_block', 'iron_block', 'bricks', 'tnt', 'bookshelf', 'mossy_cobblestone', 'obsidian', 'spawner', 'diamond_ore', 'diamond_block', 'crafting_table', 'farmland', 'furnace', 'redstone_ore', 'ice', 'snow_block', 'clay', 'jukebox', 'pumpkin', 'netherrack', 'soul_sand', 'glowstone', 'carved_pumpkin', 'jack_o_lantern', 'white_stained_glass', 'orange_stained_glass', 'magenta_stained_glass', 'light_blue_stained_glass', 'yellow_stained_glass', 'lime_stained_glass', 'pink_stained_glass', 'gray_stained_glass', 'light_gray_stained_glass', 'cyan_stained_glass', 'purple_stained_glass', 'blue_stained_glass', 'brown_stained_glass', 'green_stained_glass', 'red_stained_glass', 'black_stained_glass', 'infested_stone', 'infested_cobblestone', 'infested_stone_bricks', 'infested_mossy_stone_bricks', 'infested_cracked_stone_bricks', 'infested_chiseled_stone_bricks', 'stone_bricks', 'mossy_stone_bricks', 'cracked_stone_bricks', 'chiseled_stone_bricks', 'brown_mushroom_block', 'red_mushroom_block', 'mushroom_stem', 'melon', 'mycelium', 'nether_bricks', 'enchanting_table', 'cauldron', 'end_portal_frame', 'end_stone', 'dragon_egg', 'redstone_lamp', 'emerald_ore', 'emerald_block', 'command_block', 'beacon', 'cobblestone_wall', 'mossy_cobblestone_wall', 'anvil', 'chipped_anvil', 'damaged_anvil', 'daylight_detector', 'redstone_block', 'nether_quartz_ore', 'hopper', 'quartz_block', 'chiseled_quartz_block', 'quartz_pillar', 'dropper', 'white_terracotta', 'orange_terracotta', 'magenta_terracotta', 'light_blue_terracotta', 'yellow_terracotta', 'lime_terracotta', 'pink_terracotta', 'gray_terracotta', 'light_gray_terracotta', 'cyan_terracotta', 'purple_terracotta', 'blue_terracotta', 'brown_terracotta', 'green_terracotta', 'red_terracotta', 'black_terracotta', 'slime_block', 'prismarine', 'prismarine_bricks', 'dark_prismarine', 'sea_lantern', 'hay_block', 'terracotta', 'coal_block', 'packed_ice', 'red_sandstone', 'chiseled_red_sandstone', 'cut_red_sandstone', 'smooth_stone', 'smooth_sandstone', 'smooth_quartz', 'smooth_red_sandstone', 'purpur_block', 'purpur_pillar', 'end_stone_bricks', 'grass_path', 'end_gateway', 'repeating_command_block', 'chain_command_block', 'frosted_ice', 'magma_block', 'nether_wart_block', 'red_nether_bricks', 'bone_block', 'observer', 'white_glazed_terracotta', 'orange_glazed_terracotta', 'magenta_glazed_terracotta', 'light_blue_glazed_terracotta', 'yellow_glazed_terracotta', 'lime_glazed_terracotta', 'pink_glazed_terracotta', 'gray_glazed_terracotta', 'light_gray_glazed_terracotta', 'cyan_glazed_terracotta', 'purple_glazed_terracotta', 'blue_glazed_terracotta', 'brown_glazed_terracotta', 'green_glazed_terracotta', 'red_glazed_terracotta', 'black_glazed_terracotta', 'white_concrete', 'orange_concrete', 'magenta_concrete', 'light_blue_concrete', 'yellow_concrete', 'lime_concrete', 'pink_concrete', 'gray_concrete', 'light_gray_concrete', 'cyan_concrete', 'purple_concrete', 'blue_concrete', 'brown_concrete', 'green_concrete', 'red_concrete', 'black_concrete', 'white_concrete_powder', 'orange_concrete_powder', 'magenta_concrete_powder', 'light_blue_concrete_powder', 'yellow_concrete_powder', 'lime_concrete_powder', 'pink_concrete_powder', 'gray_concrete_powder', 'light_gray_concrete_powder', 'cyan_concrete_powder', 'purple_concrete_powder', 'blue_concrete_powder', 'brown_concrete_powder', 'green_concrete_powder', 'red_concrete_powder', 'black_concrete_powder', 'dried_kelp_block', 'dead_tube_coral_block', 'dead_brain_coral_block', 'dead_bubble_coral_block', 'dead_fire_coral_block', 'dead_horn_coral_block', 'tube_coral_block', 'brain_coral_block', 'bubble_coral_block', 'fire_coral_block', 'horn_coral_block', 'dead_tube_coral', 'dead_brain_coral', 'dead_bubble_coral', 'dead_fire_coral', 'dead_horn_coral', 'blue_ice', 'structure_block', 'grass_block', 'cactus', 'podzol', 'red_sand', 'sand', 'gravel']"

import common
import pushable

define @Player: @Entity[type=player, gamemode=!spectator]
	controlling: @Pushable[distance=..10]
end

reset
	/scoreboard objectives add sneak_time minecraft.custom:minecraft.sneak_time
	/scoreboard objectives add sneak_dist minecraft.custom:minecraft.crouch_one_cm
    /scoreboard objectives add use_wand minecraft.used:minecraft.carrot_on_a_stick
end

function remove_all()
	move @Pushable ~ -100 ~
	move @Physics ~ -100 ~
	move @Disguise ~ -100 ~
	move @FakeBlock ~ -100 ~
	move @SolidBlock ~ -100 ~
	/kill @Pushable
	/kill @Physics
	/kill @Disguise
	/kill @FakeBlock
	/kill @SolidBlock
end

function remove_here()
	/kill @Pushable[distance=..1]
	/kill @Physics[distance=..1]
	/kill @Disguise[distance=..1]
	/kill @FakeBlock[distance=..1]
	/kill @SolidBlock[distance=..1]
end

function create_block()
	align xyz at ~0.5 ~ ~0.5
		as create @Pushable
			@s.physics = create @Physics

			for $block_type in $BlockTypes
				if block ~ ~ ~ $block_type
					/summon armor_stand ~ ~ ~ {Tags:["Disguise", "New"], Marker:1b, Invisible:1b, Invulnerable:1b, NoGravity:1b, Passengers:[{id:"falling_block", Time:1b, NoGravity:1b, BlockState:{Name:"minecraft:$block_type"}, Tags:["FakeBlock"]}]}
					if $block_type == 'magma_block'
						@s.hot = True
					end
					if $block_type == 'blue_ice' or $block_type == 'packed_ice' or $block_type == 'ice'
						@s.cold = True
					end
					if $block_type == 'red_wool'
						@s.bishop = True
						@s.fast = True
					end
					if $block_type == 'green_wool'
						@s.rook = True
						@s.fast = True
					end
					if $block_type == 'yellow_wool'
						@s.queen = True
						@s.fast = True
					end
					if $block_type == 'orange_wool'
						@s.knight = True
						@s.fast = True
					end
				end
			end
			handled = False
			as @Disguise[tag=New]
				handled = True
				/setblock ~ ~ ~ air
			end
			if handled
				@s.disguise = &@Disguise[tag=New, limit=1]
			end
			/tag @Disguise[tag=New] remove New

			if not handled then @s.disguise = create @Disguise
		end
	end
end

clock main
	for @player in @Player
		at @s as @Pushable[distance= .. 2] at @s
			<dx, dy, dz> = @s.<pos> - @player.<pos>
			if dy > -300 and dy < 1500 and dx > -1100 and dx < 1100 and dz > -1100 and dz < 1100
				if @s.fast
					@s.<vel> += <dx, dy, dz> / 2
				end
				unless @s.fast
					@s.<vel> += <dx, dy, dz> / 10
				end
				unless @s.sound_cooldown > 0
					/playsound minecraft:entity.minecart.riding block @a ~ ~ ~ 0.2 2
					@s.sound_cooldown = rand(10,20)
				end
			end
			@s[sound_cooldown > 0].sound_cooldown--
		end

		@s.holding_wand = False
		@s[nbt={SelectedItem:{id:"minecraft:carrot_on_a_stick"}}].holding_wand = True

		if not @s.holding_wand
			@s.wand_active = False
			@s.controlling = None
		end

		if @s.use_wand
			handled = False
			if @s.wand_active
				@s.wand_active = False
				@s.controlling = None
				handled = True
			end
			if not handled
				at @s ~ ~1 ~ at ^ ^ ^3
					as @Pushable[distance = ..2,limit=1,sort=nearest]
						@player.wand_active = True
						@player.controlling = &@s
					end
				end
			end

			@s.use_wand = False
		end

		if @s.wand_active
			at @s ~ ~1 ~ at ^ ^ ^3
				<target> = here
				as @s.controlling
					<delta> = <target> - @s.<pos>
					@s.<vel> = <delta> / 4
					if @player[distance=5..]
						@player.wand_active = False
						@player.controlling = None
					end
					at <target> - ((<target> - (@player.<pos> + <0, 700, 0>)) * rand(1, 9) / 10) + <0, 500, 0>
						/particle minecraft:crit ~ ~ ~ 0 0 0 0 1 normal
					end
				end
			end
		end
	end

	for @pushable in @Pushable
		at @s as @Pushable[distance= .. 1] at @s
			unless @s._id == @pushable._id
				<dx, dy, dz> = @s.<pos> - @pushable.<pos>
				if dy > -800 and dy < 800 and dx > -950 and dx < 950 and dz > -950 and dz < 950
					@s.<vel> += <dx, dy, dz> / 20
					if @s[cold] and @pushable[hot]
						@s.<vel> += <dx, dy, dz>
						@pushable.<vel> -= <dx, dy, dz>
						/playsound minecraft:block.fire.extinguish block @a
					end
				end
			end
		end
	end

	as @Pushable at @s
		as @s.disguise
			/tp @s ~ ~ ~
		end
		as @s.physics
			/tp @s ~ ~ ~
		end

		<xb, yb, zb> = @s.<pos> % 1000

		stairs_east = False
		/execute if block ~0.25 ~ ~ #minecraft:stairs[facing=east,half=bottom] run scoreboard players set Global stairs_east 1
		if stairs_east
			if @s.vx > 0 and @s.on_ground and yb == 0
				@s.vy += 350
			end
			if @s.vx > 0 and @s.on_ground and yb == 500 and xb > 225 and xb <= 250
				@s.vy += 350
			end
		end

		stairs_west = False
		/execute if block ~-0.26 ~ ~ #minecraft:stairs[facing=west,half=bottom] run scoreboard players set Global stairs_west 1
		if stairs_west
			if @s.vx < 0 and @s.on_ground and yb == 0
				@s.vy += 350
			end
			if @s.vx < 0 and @s.on_ground and yb == 500 and xb >= 750 and xb < 775
				@s.vy += 350
			end
		end

		stairs_south = False
		/execute if block ~ ~ ~0.25 #minecraft:stairs[facing=south,half=bottom] run scoreboard players set Global stairs_south 1
		if stairs_south
			if @s.vz > 0 and @s.on_ground and yb == 0
				@s.vy += 350
			end
			if @s.vz > 0 and @s.on_ground and yb == 500 and zb > 225 and zb <= 250
				@s.vy += 350
			end
		end

		stairs_north = False
		/execute if block ~ ~ ~-0.26 #minecraft:stairs[facing=north,half=bottom] run scoreboard players set Global stairs_north 1
		if stairs_north
			if @s.vz < 0 and @s.on_ground and yb == 0
				@s.vy += 350
			end
			if @s.vz < 0 and @s.on_ground and yb == 500 and zb >= 750 and zb < 775
				@s.vy += 350
			end
		end

		if @s.hot at @s if block ~ ~ ~ air
			/setblock ~ ~ ~ fire
		end
		if @s.cold at @s if block ~ ~ ~ fire
			/setblock ~ ~ ~ air
			/playsound minecraft:block.fire.extinguish block @a
		end
		if @s.cold do @s.fire_timer = 0
	end

	as @FakeBlock
		@s.on_ground = False
		@s.time = 1
	end

	/effect give @SolidBlock invisibility 1000000 1 true

	for @player in @Player[sneak_dist > 0]
		at @s ~ ~1 ~ at ^ ^ ^1
			as @Pushable[distance = ..1,limit=1,sort=nearest]
				<delta> = @player.<pos> - @s.<pos>
				if @s.fast
					@s.<vel> += <delta> / 2
				end
				unless @s.fast
					@s.<vel> += <delta> / 20
				end
			end
		end

		@s.sneak_dist = 0
	end


	as @Pushable[bishop]
		@s.get_velocity_signs()

		avg = (avx + avz) / 2
		@s.vx = sx * avg
		@s.vz = sz * avg
	end

	as @Pushable[rook]
		@s.get_velocity_signs()

		if avx > avz
			@s.vz = 0
		end
		if avx <= avz
			@s.vx = 0
		end
	end

	as @Pushable[queen]
		@s.get_velocity_signs()

		handled = False
		if havx > avz
			@s.vz = 0
			handled = True
		end
		if not handled and havz > avx
			@s.vx = 0
			handled = True
		end
		if not handled
			avg = (avx + avz) / 2
			@s.vx = sx * avg
			@s.vz = sz * avg
		end
	end

	as @Pushable[knight]
		if @s.on_ground
			@s.ground_timer++
			if @s.ground_timer == 1
				@s.vx = 0
				@s.vz = 0
			end
			if @s.ground_timer > 1 unless @s.vx == 0 and @s.vz == 0
				@s.vy += 600
			end
		end
		unless @s.on_ground
			@s.ground_timer = 0
		end

		@s.get_velocity_signs()
		if avx > avz
			@s.vz = avx / 2 * sz
		end
		unless avx > avz
			@s.vx = avz / 2 * sx
		end
	end

	as @Pushable[lock_x]
		@s.vx = 0
	end
end
